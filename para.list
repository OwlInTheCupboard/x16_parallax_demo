ca65 V2.19 - Git 43881afc
Main file   : parallax.asm
Current file: parallax.asm

000000r 1               .include "x16.inc"
000000r 2               .ifndef X16_INC
000000r 2               X16_INC  = 1
000000r 2               
000000r 2               .ifndef __CX16__
000000r 2               __CX16__ = 1
000000r 2               .endif
000000r 2               
000000r 2               SD_DEVICE   = 1
000000r 2               HOST_DEVICE = 8
000000r 2               DISK_DEVICE = HOST_DEVICE
000000r 2               
000000r 2               
000000r 2               ; RAM Addresses
000000r 2               
000000r 2               ; Kernal Registers
000000r 2               r0						= $02
000000r 2               r0L					= r0
000000r 2               r0H					= r0+1
000000r 2               r1						= $04
000000r 2               r1L					= r1
000000r 2               r1H					= r1+1
000000r 2               r2						= $06
000000r 2               r2L					= r2
000000r 2               r2H					= r2+1
000000r 2               r3						= $08
000000r 2               r3L					= r3
000000r 2               r3H					= r3+1
000000r 2               r4						= $0A
000000r 2               r4L					= r4
000000r 2               r4H					= r4+1
000000r 2               r5						= $0C
000000r 2               r5L					= r5
000000r 2               r5H					= r5+1
000000r 2               r6						= $0E
000000r 2               r6L					= r6
000000r 2               r6H					= r6+1
000000r 2               r7						= $10
000000r 2               r7L					= r7
000000r 2               r7H					= r7+1
000000r 2               r8						= $12
000000r 2               r8L					= r8
000000r 2               r8H					= r8+1
000000r 2               r9						= $14
000000r 2               r9L					= r9
000000r 2               r9H					= r9+1
000000r 2               r10					= $16
000000r 2               r10L					= r10
000000r 2               r10H					= r10+1
000000r 2               r11					= $18
000000r 2               r11L					= r11
000000r 2               r11H					= r11+1
000000r 2               r12					= $1A
000000r 2               r12L					= r12
000000r 2               r12H					= r12+1
000000r 2               r13					= $1C
000000r 2               r13L					= r13
000000r 2               r13H					= r13+1
000000r 2               r14					= $1E
000000r 2               r14L					= r14
000000r 2               r14H					= r14+1
000000r 2               r15					= $20
000000r 2               r15L					= r15
000000r 2               r15H					= r15+1
000000r 2               
000000r 2               ; Zero-Page userspace
000000r 2               ZP_PTR_1          = $00	; first four pointers for temporary use only
000000r 2               ZP_PTR_2          = $22
000000r 2               ZP_PTR_3          = $24
000000r 2               ZP_PTR_4          = $26
000000r 2               
000000r 2               ; I/O Registers
000000r 2               VERA_addr_low     = $9F20
000000r 2               VERA_addr_high    = $9F21
000000r 2               VERA_addr_bank    = $9F22
000000r 2               VERA_data0        = $9F23
000000r 2               VERA_data1        = $9F24
000000r 2               VERA_ctrl         = $9F25
000000r 2               VERA_ien          = $9F26
000000r 2               VERA_isr          = $9F27
000000r 2               VERA_irqline_l    = $9F28
000000r 2               VERA_dc_video     = $9F29
000000r 2               VERA_dc_hscale    = $9F2A
000000r 2               VERA_dc_vscale    = $9F2B
000000r 2               VERA_dc_border    = $9F2C
000000r 2               VERA_dc_hstart    = $9F29
000000r 2               VERA_dc_hstop     = $9F2A
000000r 2               VERA_dc_vsstart   = $9F2B
000000r 2               VERA_dc_vstop     = $9F2C
000000r 2               VERA_L0_config    = $9F2D
000000r 2               VERA_L0_mapbase   = $9F2E
000000r 2               VERA_L0_tilebase  = $9F2F
000000r 2               VERA_L0_hscroll_l = $9F30
000000r 2               VERA_L0_hscroll_h = $9F31
000000r 2               VERA_L0_vscroll_l = $9F32
000000r 2               VERA_L0_vscroll_h = $9F33
000000r 2               VERA_L1_config    = $9F34
000000r 2               VERA_L1_mapbase   = $9F35
000000r 2               VERA_L1_tilebase  = $9F36
000000r 2               VERA_L1_hscroll_l = $9F37
000000r 2               VERA_L1_hscroll_h = $9F38
000000r 2               VERA_L1_vscroll_l = $9F39
000000r 2               VERA_L1_vscroll_h = $9F3A
000000r 2               VERA_audio_ctrl   = $9F3B
000000r 2               VERA_audio_rate   = $9F3C
000000r 2               VERA_audio_data   = $9F3D
000000r 2               VERA_spi_data     = $9F3E
000000r 2               VERA_spi_ctrl     = $9F3F
000000r 2               
000000r 2               
000000r 2               ROM_BANK          = $9F60
000000r 2               RAM_BANK          = $9F61
000000r 2               
000000r 2               YM_reg            = $9FE0
000000r 2               YM_data           = $9FE1
000000r 2               
000000r 2               ; Emulator Registers
000000r 2               GIF_ctrl          = $9FB5
000000r 2               
000000r 2               ; ROM Banks
000000r 2               KERNAL_ROM_BANK   = 0
000000r 2               BASIC_ROM_BANK    = 4
000000r 2               
000000r 2               ; Banked Addresses
000000r 2               RAM_WIN           = $A000
000000r 2               RAM_WIN_SIZE      = $2000
000000r 2               ROM_WIN           = $C000
000000r 2               
000000r 2               ; Kernal Subroutines
000000r 2               CONSOLE_set_paging_message		:= $FED5
000000r 2               CONSOLE_put_image					:= $FED8
000000r 2               CONSOLE_init						:= $FEDB
000000r 2               CONSOLE_put_char					:= $FEDE
000000r 2               CONSOLE_get_char					:= $FEE1
000000r 2               MEMORY_FILL                   := $FEE4
000000r 2               MEMORY_COPY                   := $FEE7
000000r 2               MEMORY_CRC                    := $FEEA
000000r 2               MEMORY_DECOMPRESS             := $FEED
000000r 2               SPRITE_set_image					:= $FEF0
000000r 2               SPRITE_set_position				:= $FEF3
000000r 2               FB_init                 		:= $FEF6
000000r 2               FB_get_info             		:= $FEF9
000000r 2               FB_set_palette          		:= $FEFC
000000r 2               FB_cursor_position      		:= $FEFF
000000r 2               FB_cursor_next_line     		:= $FF02
000000r 2               FB_get_pixel            		:= $FF05
000000r 2               FB_get_pixels           		:= $FF08
000000r 2               FB_set_pixel            		:= $FF0B
000000r 2               FB_set_pixels           		:= $FF0E
000000r 2               FB_set_8_pixels         		:= $FF11
000000r 2               FB_set_8_pixels_opaque  		:= $FF14
000000r 2               FB_fill_pixels          		:= $FF17
000000r 2               FB_filter_pixels        		:= $FF1A
000000r 2               FB_move_pixels          		:= $FF1D
000000r 2               GRAPH_init							:= $FF20
000000r 2               GRAPH_clear							:= $FF23
000000r 2               GRAPH_set_window					:= $FF26
000000r 2               GRAPH_set_colors					:= $FF29
000000r 2               GRAPH_draw_line					:= $FF2C
000000r 2               GRAPH_draw_rect					:= $FF2F
000000r 2               GRAPH_move_rect					:= $FF32
000000r 2               GRAPH_draw_oval					:= $FF35
000000r 2               GRAPH_draw_image					:= $FF38
000000r 2               GRAPH_set_font						:= $FF3B
000000r 2               GRAPH_get_char_size				:= $FF3E
000000r 2               GRAPH_put_char						:= $FF41
000000r 2               MONITOR								:= $FF44
000000r 2               ENTER_BASIC							:= $FF47
000000r 2               CLOCK_SET_DATE_TIME           := $FF4D
000000r 2               CLOCK_GET_DATE_TIME           := $FF50
000000r 2               JOYSTICK_SCAN                 := $FF53
000000r 2               JOYSTICK_GET                  := $FF56
000000r 2               SCREEN_SET_MODE					:= $FF5F
000000r 2               SCREEN_SET_CHARSET				:= $FF62
000000r 2               
000000r 2               MOUSE_CONFIG                  := $FF68
000000r 2               MOUSE_GET			            := $FF6B
000000r 2               MOUSE_SCAN                    := $FF71
000000r 2               SCINIT                        := $FF81
000000r 2               IOINIT                        := $FF84
000000r 2               RAMTAS                        := $FF87
000000r 2               RESTOR                        := $FF8A
000000r 2               SETLFS                        := $FFBA
000000r 2               SETNAM                        := $FFBD
000000r 2               OPEN                          := $FFC0
000000r 2               CLOSE                         := $FFC3
000000r 2               CHKIN                         := $FFC6
000000r 2               CHKOUT                        := $FFC9
000000r 2               CLRCHN                        := $FFCC
000000r 2               CHRIN                         := $FFCF
000000r 2               CHROUT                        := $FFD2
000000r 2               LOAD                          := $FFD5
000000r 2               SAVE                          := $FFD8
000000r 2               SETTIM                        := $FFDB
000000r 2               RDTIM                         := $FFDE
000000r 2               STOP                          := $FFE1
000000r 2               GETIN                         := $FFE4
000000r 2               CLALL									:= $FFE7
000000r 2               UDTIM									:= $FFEA
000000r 2               SCREEN								:= $FFED
000000r 2               PLOT									:= $FFF0
000000r 2               IOBASE								:= $FFF3
000000r 2               
000000r 2               ; BASIC Vectors
000000r 2               BASIC_PANIC       := $C000
000000r 2               BASIC_INIT        := $C003
000000r 2               
000000r 2               
000000r 2               ; VRAM Addresses
000000r 2               VRAM_petscii   = $0F800
000000r 2               VRAM_psg       = $1F9C0
000000r 2               VRAM_palette   = $1FA00
000000r 2               VRAM_sprattr   = $1FC00
000000r 2               
000000r 2               ; IRQs
000000r 2               IRQVec         := $0314
000000r 2               BRKVec         := $0316
000000r 2               NMIVec         := $0318
000000r 2               
000000r 2               ;   Macros
000000r 2               
000000r 2               .macro VERA_SET_ADDR addr, stride
000000r 2               	.ifnblank stride
000000r 2                     .if stride < 0
000000r 2                        lda #((^addr) | $08 | ((0-stride) << 4))
000000r 2                     .else
000000r 2                        lda #((^addr) | (stride << 4))
000000r 2                     .endif
000000r 2               	.else
000000r 2               		lda #(^addr) | $10
000000r 2               	.endif
000000r 2               
000000r 2               	sta VERA_addr_bank
000000r 2               	lda #(>addr)
000000r 2               	sta VERA_addr_high
000000r 2               	lda #(<addr)
000000r 2               	sta VERA_addr_low
000000r 2               .endmacro
000000r 2               
000000r 2               
000000r 2               .endif
000000r 2               
000000r 1               .include "macros.inc"
000000r 2               .ifndef MACROS_INC
000000r 2               MACROS_INC  = 1
000000r 2               
000000r 2               ;macros taken from Aloevera examples (https://github.com/yeastplume/aloevera)
000000r 2               
000000r 2               .macro add_16_value addr, value
000000r 2               	clc
000000r 2               	lda addr
000000r 2               	adc #<value
000000r 2               	sta addr
000000r 2               	lda addr + 1
000000r 2               	adc #>value
000000r 2               	sta addr + 1
000000r 2               .endmacro
000000r 2               
000000r 2               .macro store_16_value addr, value
000000r 2                 lda #<value
000000r 2                 sta addr
000000r 2                 lda #>value
000000r 2                 sta addr +1
000000r 2               .endmacro
000000r 2               
000000r 2               .macro compare_16_value addr, value, loop_label
000000r 2                 lda addr+1
000000r 2                 cmp #>value
000000r 2                 bne loop_label
000000r 2                 lda addr
000000r 2                 cmp #<value
000000r 2                 bne loop_label
000000r 2               .endmacro
000000r 2               
000000r 2               .endif
000000r 2               
000000r 1               
000000r 1               .org $080D
00080D  1               .segment "STARTUP"
00080D  1               .segment "INIT"
00080D  1               .segment "ONCE"
00080D  1               .segment "CODE"
00080D  1               
00080D  1  4C 5D 08       jmp start
000810  1               
000810  1  00 00        default_irq_vector: .addr 0
000812  1               VSYNC_BIT = $83 ;enable vsync, line IRQs and turning on the 8 bit of the line interupt
000812  1  00           increment: .byte 0
000813  1  04           scroll_ammount: .byte 4;this is the speed of the foreground.
000814  1               TILESET_START = $F800
000814  1               display_scale = 64
000814  1  00           frame: .byte 0
000815  1  00 01 02 03  background_list: .byte 0,1,2,3,4,5,6,7,8,9,10,11,12,13,0
000819  1  04 05 06 07  
00081D  1  08 09 0A 0B  
000824  1  00           line_index: .byte 0
000825  1               parallax_blocks: ;these are all above 255 so just make sure ise bit is set
000825  1  00 10 20 30    .byte 0,16,32,48
000829  1  40 50 60 70    .byte 64,80,96,112
00082D  1  80 90 A0 B0    .byte 128,144,160,176
000831  1  C0 D0          .byte 192,208
000833  1               increment_div:
000833  1  FF 80 40 20    .byte 255,128,64,32
000837  1  10 08 04 03    .byte 16,8,4,3
00083B  1  02 01 01 01    .byte 2,1,1,1
00083F  1  01 01          .byte 1,1
000841  1  00 00 00 00  scroll: .byte 0,0,0,0 ,0,0,0,0 ,0,0,0,0 ,0,0
000845  1  00 00 00 00  
000849  1  00 00 00 00  
00084F  1  00 00 00 00  scroll_counter: .byte 0,0,0,0 ,0,0,0,0 ,0,0,0,0 ,0,0
000853  1  00 00 00 00  
000857  1  00 00 00 00  
00085D  1               
00085D  1               
00085D  1               
00085D  1               start:
00085D  1  78             sei
00085E  1               
00085E  1  AD 25 08       lda parallax_blocks
000861  1  8D 28 9F       sta VERA_irqline_l
000864  1               
000864  1  A9 40          lda #display_scale
000866  1  8D 2A 9F       sta VERA_dc_hscale
000869  1  8D 2B 9F       sta VERA_dc_vscale
00086C  1  AD 34 9F       lda VERA_L1_config
00086F  1  09 02          ora #$02
000871  1  8D 34 9F       sta VERA_L1_config
000874  1  AD 36 9F       lda VERA_L1_tilebase
000877  1  09 03          ora #$03
000879  1  8D 36 9F       sta VERA_L1_tilebase
00087C  1               
00087C  1  20 21 09       jsr loadpallet
00087F  1  20 55 09       jsr loadtileset
000882  1  20 98 09       jsr fillbackground
000885  1               
000885  1               
000885  1  AD 14 03       lda IRQVec
000888  1  8D 10 08       sta default_irq_vector
00088B  1  AD 15 03       lda IRQVec+1
00088E  1  8D 11 08       sta default_irq_vector+1
000891  1               
000891  1  A9 C2          lda #<update
000893  1  8D 14 03       sta IRQVec
000896  1  A9 09          lda #>update
000898  1  8D 15 03       sta IRQVec+1
00089B  1  A9 83          lda #VSYNC_BIT ; make VERA only generate VSYNC IRQs
00089D  1  8D 26 9F       sta VERA_ien
0008A0  1               
0008A0  1  58             cli
0008A1  1  4C BE 09       jmp main
0008A4  1               
0008A4  1               scroll_positions:
0008A4  1                 ;rather than dividing I believe this is quicker to have a counter based
0008A4  1                 ;on a ratio. This way the slower sections are a product of forground movement
0008A4  1                 ;rather than the latter.
0008A4  1  A0 00          ldy #0
0008A6  1                 @ratio_loop:
0008A6  1  CC 13 08       cpy scroll_ammount
0008A9  1  F0 4E          beq @done
0008AB  1  EE 4F 08         inc scroll_counter
0008AE  1  EE 50 08         inc scroll_counter+1
0008B1  1  EE 51 08         inc scroll_counter+2
0008B4  1  EE 52 08         inc scroll_counter+3
0008B7  1  EE 53 08         inc scroll_counter+4
0008BA  1  EE 54 08         inc scroll_counter+5
0008BD  1  EE 55 08         inc scroll_counter+6
0008C0  1  EE 56 08         inc scroll_counter+7
0008C3  1  EE 57 08         inc scroll_counter+8
0008C6  1  EE 58 08         inc scroll_counter+9
0008C9  1  EE 59 08         inc scroll_counter+10
0008CC  1  EE 5A 08         inc scroll_counter+11
0008CF  1  EE 5B 08         inc scroll_counter+12
0008D2  1  EE 5C 08         inc scroll_counter+13
0008D5  1  A2 00            ldx #0
0008D7  1                   @increment_loop:
0008D7  1  BD 33 08           lda increment_div,x
0008DA  1  1A                 inc
0008DB  1  DD 4F 08           cmp scroll_counter,x
0008DE  1  D0 10              bne @next
0008E0  1  FE 41 08           inc scroll,x
0008E3  1  9E 4F 08           stz scroll_counter,x
0008E6  1  A9 10              lda #16
0008E8  1  DD 41 08           cmp scroll,x
0008EB  1  D0 03              bne @next
0008ED  1  9E 41 08           stz scroll,x
0008F0  1                     @next:
0008F0  1  E8                 inx
0008F1  1  E0 0E              cpx #14
0008F3  1  D0 E2              bne @increment_loop
0008F5  1  C8               iny
0008F6  1  4C A6 08         jmp @ratio_loop
0008F9  1                 @done:
0008F9  1  60             rts
0008FA  1               
0008FA  1               reset_screen_scroll:
0008FA  1  9C 37 9F       stz VERA_L1_hscroll_l
0008FD  1  60             rts
0008FE  1               
0008FE  1               warp_screen:
0008FE  1  AE 12 08       ldx increment
000901  1  BD 41 08       lda scroll,x
000904  1  8D 37 9F       sta VERA_L1_hscroll_l
000907  1  9C 38 9F       stz VERA_L1_hscroll_h
00090A  1  EE 12 08       inc increment
00090D  1  A9 0E          lda #14
00090F  1  CD 12 08       cmp increment
000912  1  D0 03          bne @done
000914  1  9C 12 08       stz increment
000917  1               @done:
000917  1  AE 12 08       ldx increment
00091A  1  BD 25 08       lda parallax_blocks,x
00091D  1  8D 28 9F       sta VERA_irqline_l
000920  1  60             rts
000921  1               
000921  1               loadpallet:
000921  1  A9 00          lda #$00
000923  1  8D 20 9F       sta VERA_addr_low
000926  1  A9 FA          lda #$FA
000928  1  8D 21 9F       sta VERA_addr_high
00092B  1  A9 11          lda #$11
00092D  1  8D 22 9F       sta VERA_addr_bank
000930  1  A6 00          ldx 0
000932  1               @loop:
000932  1  BD EE 09       lda palette,x
000935  1  8D 23 9F       sta VERA_data0
000938  1  E8             inx
000939  1  E0 40          cpx #64
00093B  1  D0 F5          bne @loop
00093D  1  60             rts
00093E  1               
00093E  1               divide: ;ZP_PRT_1 = dividend, ZP_PTR_2 = divisor, ZP_PTR_3 = remainder
00093E  1                       ;result is stored in ZP_PRT_1
00093E  1  64 24          stz ZP_PTR_3
000940  1  A2 08          ldx #8
000942  1               @loop:
000942  1  06 00          asl ZP_PTR_1
000944  1  26 24          rol ZP_PTR_3
000946  1  A5 24          lda ZP_PTR_3
000948  1  38             sec
000949  1  E5 22          sbc ZP_PTR_2
00094B  1  90 04          bcc @done
00094D  1  85 24          sta ZP_PTR_3
00094F  1  E6 00          inc ZP_PTR_1
000951  1               @done:
000951  1  CA             dex
000952  1  D0 EE          bne @loop
000954  1  60             rts
000955  1               
000955  1               loadtileset:
000955  1  A9 10 8D 22    VERA_SET_ADDR TILESET_START, 1
000959  1  9F A9 F8 8D  
00095D  1  21 9F A9 00  
000964  1  A9 2E 85 00    store_16_value ZP_PTR_1, tileset
000968  1  A9 0A 85 01  
00096C  1               @loop:
00096C  1  B2 00          lda (ZP_PTR_1)
00096E  1  8D 23 9F       sta VERA_data0
000971  1  18 A5 00 69    add_16_value ZP_PTR_1, 1
000975  1  01 85 00 A5  
000979  1  01 69 00 85  
00097E  1  A5 01 C9 11    compare_16_value ZP_PTR_1, (tileset + 1792), @loop
000982  1  D0 E8 A5 00  
000986  1  C9 2E D0 E2  
00098A  1  60             rts
00098B  1               
00098B  1               inc_frame:
00098B  1  EE 14 08       inc frame
00098E  1  A9 3C          lda #60
000990  1  CD 14 08       cmp frame
000993  1  D0 02          bne @continue
000995  1  A9 00          lda #0
000997  1               @continue:
000997  1  60             rts
000998  1               
000998  1               fillbackground:
000998  1  A9 10          lda #$10
00099A  1  8D 22 9F       sta VERA_addr_bank
00099D  1  A0 00          ldy #0
00099F  1                 @yloop:
00099F  1  9C 20 9F         stz VERA_addr_low
0009A2  1  98               tya
0009A3  1  8D 21 9F         sta VERA_addr_high
0009A6  1  A2 00            ldx #0
0009A8  1                   @xloop:
0009A8  1  B9 15 08           lda background_list,y
0009AB  1  8D 23 9F           sta VERA_data0
0009AE  1  A9 10              lda #$10
0009B0  1  8D 23 9F           sta VERA_data0
0009B3  1  E8                 inx
0009B4  1  E0 18              cpx #24
0009B6  1  D0 F0              bne @xloop
0009B8  1  C8               iny
0009B9  1  C0 0F            cpy #15
0009BB  1  D0 E2            bne @yloop
0009BD  1  60             rts
0009BE  1               
0009BE  1               main:
0009BE  1  CB             wai
0009BF  1  4C BE 09       jmp main
0009C2  1               
0009C2  1               update:
0009C2  1  AD 27 9F       lda VERA_isr
0009C5  1  29 01          and #$01
0009C7  1  D0 0A          bne @frame_update
0009C9  1  AD 27 9F       lda VERA_isr
0009CC  1  29 02          and #$02
0009CE  1  D0 0C          bne @line_update
0009D0  1  4C EB 09       jmp @continue
0009D3  1               @frame_update:
0009D3  1  20 8B 09       jsr inc_frame
0009D6  1  20 A4 08       jsr scroll_positions
0009D9  1  20 FA 08       jsr reset_screen_scroll
0009DC  1               @line_update:
0009DC  1  20 FE 08       jsr warp_screen
0009DF  1  AD 27 9F       lda VERA_isr
0009E2  1  09 02          ora #$02
0009E4  1  8D 27 9F       sta VERA_isr
0009E7  1  7A             ply
0009E8  1  FA             plx
0009E9  1  68             pla
0009EA  1  40             rti
0009EB  1               @continue:
0009EB  1  6C 10 08       jmp (default_irq_vector)
0009EE  1               
0009EE  1               palette:
0009EE  1                 .include "palette.inc"
0009EE  2               ;palette_1 - size is 64
0009EE  2  00 00 23 02  .byte $00,$00,$23,$02,$23,$04,$33,$06
0009F2  2  23 04 33 06  
0009F6  2  53 08 72 0D  .byte $53,$08,$72,$0D,$A6,$0D,$C9,$0E
0009FA  2  A6 0D C9 0E  
0009FE  2  F3 0F E5 09  .byte $F3,$0F,$E5,$09,$B3,$06,$96,$03
000A02  2  B3 06 96 03  
000A06  2  62 04 42 05  .byte $62,$04,$42,$05,$78,$08,$66,$06
000A0A  2  78 08 66 06  
000A0E  2  55 05 48 07  .byte $55,$05,$48,$07,$33,$0A,$56,$0D
000A12  2  33 0A 56 0D  
000A16  2  7B 0D 94 08  .byte $7B,$0D,$94,$08,$33,$03,$63,$08
000A1A  2  33 03 63 08  
000A1E  2  37 03 68 03  .byte $37,$03,$68,$03,$6E,$05,$9F,$06
000A22  2  6E 05 9F 06  
000A26  2  CE 05 DF 0C  .byte $CE,$05,$DF,$0C,$FF,$0F,$AB,$09
000A2A  2  FF 0F AB 09  
000A2E  2               
000A2E  1               tileset:
000A2E  1                 .include "tileset.inc"
000A2E  2               ;wall_tiles - size is 1792
000A2E  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
000A32  2  88 88 88 88  
000A36  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
000A3A  2  88 88 88 88  
000A3E  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
000A42  2  88 88 88 88  
000A46  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
000A4A  2  88 88 88 88  
000A4E  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
000A52  2  88 88 88 88  
000A56  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
000A5A  2  88 88 88 88  
000A5E  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
000A62  2  88 88 88 88  
000A66  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
000A6A  2  88 88 88 88  
000A6E  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
000A72  2  88 88 88 88  
000A76  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
000A7A  2  88 88 88 88  
000A7E  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
000A82  2  88 88 88 88  
000A86  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
000A8A  2  88 88 88 88  
000A8E  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
000A92  2  88 88 88 88  
000A96  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
000A9A  2  88 88 88 88  
000A9E  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
000AA2  2  88 88 88 88  
000AA6  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
000AAA  2  88 88 88 88  
000AAE  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
000AB2  2  88 88 88 88  
000AB6  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
000ABA  2  88 88 88 88  
000ABE  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
000AC2  2  88 88 88 88  
000AC6  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
000ACA  2  88 88 88 88  
000ACE  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
000AD2  2  88 88 88 88  
000AD6  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
000ADA  2  88 88 88 88  
000ADE  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
000AE2  2  88 88 88 88  
000AE6  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
000AEA  2  88 88 88 88  
000AEE  2  98 98 98 88  .byte $98,$98,$98,$88,$98,$98,$98,$88
000AF2  2  98 98 98 88  
000AF6  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
000AFA  2  88 88 88 88  
000AFE  2  98 98 98 98  .byte $98,$98,$98,$98,$98,$98,$98,$98
000B02  2  98 98 98 98  
000B06  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
000B0A  2  88 88 88 88  
000B0E  2  98 98 98 98  .byte $98,$98,$98,$98,$98,$98,$98,$98
000B12  2  98 98 98 98  
000B16  2  89 88 89 88  .byte $89,$88,$89,$88,$89,$88,$89,$88
000B1A  2  89 88 89 88  
000B1E  2  98 98 98 98  .byte $98,$98,$98,$98,$98,$98,$98,$98
000B22  2  98 98 98 98  
000B26  2  88 89 88 89  .byte $88,$89,$88,$89,$88,$89,$88,$89
000B2A  2  88 89 88 89  
000B2E  2  98 98 98 98  .byte $98,$98,$98,$98,$98,$98,$98,$98
000B32  2  98 98 98 98  
000B36  2  89 89 89 89  .byte $89,$89,$89,$89,$89,$89,$89,$89
000B3A  2  89 89 89 89  
000B3E  2  98 99 98 98  .byte $98,$99,$98,$98,$98,$99,$98,$98
000B42  2  98 99 98 98  
000B46  2  89 89 89 89  .byte $89,$89,$89,$89,$89,$89,$89,$89
000B4A  2  89 89 89 89  
000B4E  2  99 98 99 99  .byte $99,$98,$99,$99,$99,$98,$99,$99
000B52  2  99 98 99 99  
000B56  2  89 89 89 89  .byte $89,$89,$89,$89,$89,$89,$89,$89
000B5A  2  89 89 89 89  
000B5E  2  99 99 99 99  .byte $99,$99,$99,$99,$99,$99,$99,$99
000B62  2  99 99 99 99  
000B66  2  89 89 89 89  .byte $89,$89,$89,$89,$89,$89,$89,$89
000B6A  2  89 89 89 89  
000B6E  2  99 99 99 99  .byte $99,$99,$99,$99,$99,$99,$99,$99
000B72  2  99 99 99 99  
000B76  2  99 89 99 89  .byte $99,$89,$99,$89,$99,$89,$99,$89
000B7A  2  99 89 99 89  
000B7E  2  99 99 99 99  .byte $99,$99,$99,$99,$99,$99,$99,$99
000B82  2  99 99 99 99  
000B86  2  99 99 89 99  .byte $99,$99,$89,$99,$99,$99,$89,$99
000B8A  2  99 99 89 99  
000B8E  2  99 99 99 99  .byte $99,$99,$99,$99,$99,$99,$99,$99
000B92  2  99 99 99 99  
000B96  2  99 99 99 99  .byte $99,$99,$99,$99,$99,$99,$99,$99
000B9A  2  99 99 99 99  
000B9E  2  99 99 99 99  .byte $99,$99,$99,$99,$99,$99,$99,$99
000BA2  2  99 99 99 99  
000BA6  2  99 99 99 99  .byte $99,$99,$99,$99,$99,$99,$99,$99
000BAA  2  99 99 99 99  
000BAE  2  99 99 99 99  .byte $99,$99,$99,$99,$99,$99,$99,$99
000BB2  2  99 99 99 99  
000BB6  2  99 99 99 99  .byte $99,$99,$99,$99,$99,$99,$99,$99
000BBA  2  99 99 99 99  
000BBE  2  99 99 99 99  .byte $99,$99,$99,$99,$99,$99,$99,$99
000BC2  2  99 99 99 99  
000BC6  2  99 99 99 99  .byte $99,$99,$99,$99,$99,$99,$99,$99
000BCA  2  99 99 99 99  
000BCE  2  99 99 99 99  .byte $99,$99,$99,$99,$99,$99,$99,$99
000BD2  2  99 99 99 99  
000BD6  2  99 99 99 99  .byte $99,$99,$99,$99,$99,$99,$99,$99
000BDA  2  99 99 99 99  
000BDE  2  99 99 99 99  .byte $99,$99,$99,$99,$99,$99,$99,$99
000BE2  2  99 99 99 99  
000BE6  2  99 99 99 99  .byte $99,$99,$99,$99,$99,$99,$99,$99
000BEA  2  99 99 99 99  
000BEE  2  A9 A9 A9 99  .byte $A9,$A9,$A9,$99,$A9,$A9,$A9,$99
000BF2  2  A9 A9 A9 99  
000BF6  2  99 99 99 99  .byte $99,$99,$99,$99,$99,$99,$99,$99
000BFA  2  99 99 99 99  
000BFE  2  A9 A9 A9 A9  .byte $A9,$A9,$A9,$A9,$A9,$A9,$A9,$A9
000C02  2  A9 A9 A9 A9  
000C06  2  99 99 99 99  .byte $99,$99,$99,$99,$99,$99,$99,$99
000C0A  2  99 99 99 99  
000C0E  2  A9 A9 A9 A9  .byte $A9,$A9,$A9,$A9,$A9,$A9,$A9,$A9
000C12  2  A9 A9 A9 A9  
000C16  2  9A 99 9A 99  .byte $9A,$99,$9A,$99,$9A,$99,$9A,$99
000C1A  2  9A 99 9A 99  
000C1E  2  A9 A9 A9 A9  .byte $A9,$A9,$A9,$A9,$A9,$A9,$A9,$A9
000C22  2  A9 A9 A9 A9  
000C26  2  99 9A 99 9A  .byte $99,$9A,$99,$9A,$99,$9A,$99,$9A
000C2A  2  99 9A 99 9A  
000C2E  2  A9 A9 A9 A9  .byte $A9,$A9,$A9,$A9,$A9,$A9,$A9,$A9
000C32  2  A9 A9 A9 A9  
000C36  2  9A 9A 9A 9A  .byte $9A,$9A,$9A,$9A,$9A,$9A,$9A,$9A
000C3A  2  9A 9A 9A 9A  
000C3E  2  A9 AA A9 A9  .byte $A9,$AA,$A9,$A9,$A9,$AA,$A9,$A9
000C42  2  A9 AA A9 A9  
000C46  2  9A 9A 9A 9A  .byte $9A,$9A,$9A,$9A,$9A,$9A,$9A,$9A
000C4A  2  9A 9A 9A 9A  
000C4E  2  AA A9 AA AA  .byte $AA,$A9,$AA,$AA,$AA,$A9,$AA,$AA
000C52  2  AA A9 AA AA  
000C56  2  9A 9A 9A 9A  .byte $9A,$9A,$9A,$9A,$9A,$9A,$9A,$9A
000C5A  2  9A 9A 9A 9A  
000C5E  2  AA AA AA AA  .byte $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
000C62  2  AA AA AA AA  
000C66  2  9A 9A 9A 9A  .byte $9A,$9A,$9A,$9A,$9A,$9A,$9A,$9A
000C6A  2  9A 9A 9A 9A  
000C6E  2  AA AA AA AA  .byte $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
000C72  2  AA AA AA AA  
000C76  2  AA 9A AA 9A  .byte $AA,$9A,$AA,$9A,$AA,$9A,$AA,$9A
000C7A  2  AA 9A AA 9A  
000C7E  2  AA AA AA AA  .byte $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
000C82  2  AA AA AA AA  
000C86  2  AA AA 9A AA  .byte $AA,$AA,$9A,$AA,$AA,$AA,$9A,$AA
000C8A  2  AA AA 9A AA  
000C8E  2  AA AA AA AA  .byte $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
000C92  2  AA AA AA AA  
000C96  2  AA AA AA AA  .byte $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
000C9A  2  AA AA AA AA  
000C9E  2  AA AA AA AA  .byte $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
000CA2  2  AA AA AA AA  
000CA6  2  AA AA AA AA  .byte $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
000CAA  2  AA AA AA AA  
000CAE  2  AA AA AA AA  .byte $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
000CB2  2  AA AA AA AA  
000CB6  2  AA AA AA AA  .byte $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
000CBA  2  AA AA AA AA  
000CBE  2  AA AA AA AA  .byte $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
000CC2  2  AA AA AA AA  
000CC6  2  AA AA AA AA  .byte $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
000CCA  2  AA AA AA AA  
000CCE  2  AA AA AA AA  .byte $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
000CD2  2  AA AA AA AA  
000CD6  2  AA AA AA AA  .byte $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
000CDA  2  AA AA AA AA  
000CDE  2  AA AA AA AA  .byte $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
000CE2  2  AA AA AA AA  
000CE6  2  AA AA AA AA  .byte $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
000CEA  2  AA AA AA AA  
000CEE  2  BA BA BA AA  .byte $BA,$BA,$BA,$AA,$BA,$BA,$BA,$AA
000CF2  2  BA BA BA AA  
000CF6  2  AA AA AA AA  .byte $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
000CFA  2  AA AA AA AA  
000CFE  2  BA BA BA BA  .byte $BA,$BA,$BA,$BA,$BA,$BA,$BA,$BA
000D02  2  BA BA BA BA  
000D06  2  AA AA AA AA  .byte $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
000D0A  2  AA AA AA AA  
000D0E  2  BA BA BA BA  .byte $BA,$BA,$BA,$BA,$BA,$BA,$BA,$BA
000D12  2  BA BA BA BA  
000D16  2  AB AA AB AA  .byte $AB,$AA,$AB,$AA,$AB,$AA,$AB,$AA
000D1A  2  AB AA AB AA  
000D1E  2  BA BA BA BA  .byte $BA,$BA,$BA,$BA,$BA,$BA,$BA,$BA
000D22  2  BA BA BA BA  
000D26  2  AA AB AA AB  .byte $AA,$AB,$AA,$AB,$AA,$AB,$AA,$AB
000D2A  2  AA AB AA AB  
000D2E  2  BA BA BA BA  .byte $BA,$BA,$BA,$BA,$BA,$BA,$BA,$BA
000D32  2  BA BA BA BA  
000D36  2  AB AB AB AB  .byte $AB,$AB,$AB,$AB,$AB,$AB,$AB,$AB
000D3A  2  AB AB AB AB  
000D3E  2  BA BB BA BA  .byte $BA,$BB,$BA,$BA,$BA,$BB,$BA,$BA
000D42  2  BA BB BA BA  
000D46  2  AB AB AB AB  .byte $AB,$AB,$AB,$AB,$AB,$AB,$AB,$AB
000D4A  2  AB AB AB AB  
000D4E  2  BB BA BB BB  .byte $BB,$BA,$BB,$BB,$BB,$BA,$BB,$BB
000D52  2  BB BA BB BB  
000D56  2  AB AB AB AB  .byte $AB,$AB,$AB,$AB,$AB,$AB,$AB,$AB
000D5A  2  AB AB AB AB  
000D5E  2  BB BB BB BB  .byte $BB,$BB,$BB,$BB,$BB,$BB,$BB,$BB
000D62  2  BB BB BB BB  
000D66  2  AB AB AB AB  .byte $AB,$AB,$AB,$AB,$AB,$AB,$AB,$AB
000D6A  2  AB AB AB AB  
000D6E  2  BB BB BB BB  .byte $BB,$BB,$BB,$BB,$BB,$BB,$BB,$BB
000D72  2  BB BB BB BB  
000D76  2  BB AB BB AB  .byte $BB,$AB,$BB,$AB,$BB,$AB,$BB,$AB
000D7A  2  BB AB BB AB  
000D7E  2  BB BB BB BB  .byte $BB,$BB,$BB,$BB,$BB,$BB,$BB,$BB
000D82  2  BB BB BB BB  
000D86  2  BB BB AB BB  .byte $BB,$BB,$AB,$BB,$BB,$BB,$AB,$BB
000D8A  2  BB BB AB BB  
000D8E  2  BB BB BB BB  .byte $BB,$BB,$BB,$BB,$BB,$BB,$BB,$BB
000D92  2  BB BB BB BB  
000D96  2  BB BB BB BB  .byte $BB,$BB,$BB,$BB,$BB,$BB,$BB,$BB
000D9A  2  BB BB BB BB  
000D9E  2  BB BB BB BB  .byte $BB,$BB,$BB,$BB,$BB,$BB,$BB,$BB
000DA2  2  BB BB BB BB  
000DA6  2  BB BB BB BB  .byte $BB,$BB,$BB,$BB,$BB,$BB,$BB,$BB
000DAA  2  BB BB BB BB  
000DAE  2  BB BB BB BB  .byte $BB,$BB,$BB,$BB,$BB,$BB,$BB,$BB
000DB2  2  BB BB BB BB  
000DB6  2  BB BB BB BB  .byte $BB,$BB,$BB,$BB,$BB,$BB,$BB,$BB
000DBA  2  BB BB BB BB  
000DBE  2  BB BB BB BB  .byte $BB,$BB,$BB,$BB,$BB,$BB,$BB,$BB
000DC2  2  BB BB BB BB  
000DC6  2  BB BB BB BB  .byte $BB,$BB,$BB,$BB,$BB,$BB,$BB,$BB
000DCA  2  BB BB BB BB  
000DCE  2  BB BB BB BB  .byte $BB,$BB,$BB,$BB,$BB,$BB,$BB,$BB
000DD2  2  BB BB BB BB  
000DD6  2  BB BB BB BB  .byte $BB,$BB,$BB,$BB,$BB,$BB,$BB,$BB
000DDA  2  BB BB BB BB  
000DDE  2  CB CB CB CB  .byte $CB,$CB,$CB,$CB,$CB,$CB,$CB,$CB
000DE2  2  CB CB CB CB  
000DE6  2  BB BC BB BC  .byte $BB,$BC,$BB,$BC,$BB,$BC,$BB,$BC
000DEA  2  BB BC BB BC  
000DEE  2  CB CB CB CB  .byte $CB,$CB,$CB,$CB,$CB,$CB,$CB,$CB
000DF2  2  CB CB CB CB  
000DF6  2  BC BC BC BC  .byte $BC,$BC,$BC,$BC,$BC,$BC,$BC,$BC
000DFA  2  BC BC BC BC  
000DFE  2  CC CC CC CC  .byte $CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC
000E02  2  CC CC CC CC  
000E06  2  BC CC BC CC  .byte $BC,$CC,$BC,$CC,$BC,$CC,$BC,$CC
000E0A  2  BC CC BC CC  
000E0E  2  CC CC CC CC  .byte $CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC
000E12  2  CC CC CC CC  
000E16  2  CC CC CC C7  .byte $CC,$CC,$CC,$C7,$CC,$CC,$C7,$CC
000E1A  2  CC CC C7 CC  
000E1E  2  CC CC CC 77  .byte $CC,$CC,$CC,$77,$77,$CC,$77,$7C
000E22  2  77 CC 77 7C  
000E26  2  77 77 77 77  .byte $77,$77,$77,$77,$77,$77,$77,$77
000E2A  2  77 77 77 77  
000E2E  2  66 66 66 66  .byte $66,$66,$66,$66,$66,$66,$66,$66
000E32  2  66 66 66 66  
000E36  2  66 66 66 66  .byte $66,$66,$66,$66,$66,$66,$66,$66
000E3A  2  66 66 66 66  
000E3E  2  66 66 66 66  .byte $66,$66,$66,$66,$66,$66,$66,$66
000E42  2  66 66 66 66  
000E46  2  66 66 66 66  .byte $66,$66,$66,$66,$66,$66,$66,$66
000E4A  2  66 66 66 66  
000E4E  2  AA 66 66 66  .byte $AA,$66,$66,$66,$66,$66,$66,$66
000E52  2  66 66 66 66  
000E56  2  66 66 66 66  .byte $66,$66,$66,$66,$AA,$66,$66,$66
000E5A  2  AA 66 66 66  
000E5E  2  66 66 66 66  .byte $66,$66,$66,$66,$66,$66,$AA,$66
000E62  2  66 66 AA 66  
000E66  2  66 66 AA 66  .byte $66,$66,$AA,$66,$66,$66,$66,$66
000E6A  2  66 66 66 66  
000E6E  2  86 86 86 66  .byte $86,$86,$86,$66,$86,$86,$86,$66
000E72  2  86 86 86 66  
000E76  2  A6 66 66 66  .byte $A6,$66,$66,$66,$66,$AA,$66,$6A
000E7A  2  66 AA 66 6A  
000E7E  2  86 8A A6 86  .byte $86,$8A,$A6,$86,$86,$86,$86,$86
000E82  2  86 86 86 86  
000E86  2  66 66 66 66  .byte $66,$66,$66,$66,$66,$66,$66,$66
000E8A  2  66 66 66 66  
000E8E  2  86 86 86 AA  .byte $86,$86,$86,$AA,$A6,$86,$86,$86
000E92  2  A6 86 86 86  
000E96  2  68 66 68 66  .byte $68,$66,$68,$66,$68,$66,$68,$66
000E9A  2  68 66 68 66  
000E9E  2  86 86 86 86  .byte $86,$86,$86,$86,$8A,$AA,$86,$86
000EA2  2  8A AA 86 86  
000EA6  2  66 68 66 68  .byte $66,$68,$66,$68,$66,$68,$66,$68
000EAA  2  66 68 66 68  
000EAE  2  86 8A AA 86  .byte $86,$8A,$AA,$86,$86,$86,$86,$86
000EB2  2  86 86 86 86  
000EB6  2  68 68 68 68  .byte $68,$68,$68,$68,$68,$68,$68,$68
000EBA  2  68 68 68 68  
000EBE  2  86 88 86 86  .byte $86,$88,$86,$86,$86,$88,$86,$86
000EC2  2  86 88 86 86  
000EC6  2  68 AA AA 68  .byte $68,$AA,$AA,$68,$68,$68,$68,$68
000ECA  2  68 68 68 68  
000ECE  2  88 86 88 88  .byte $88,$86,$88,$88,$88,$8A,$AA,$88
000ED2  2  88 8A AA 88  
000ED6  2  68 68 68 68  .byte $68,$68,$68,$68,$68,$68,$68,$68
000EDA  2  68 68 68 68  
000EDE  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
000EE2  2  88 88 88 88  
000EE6  2  68 68 68 AA  .byte $68,$68,$68,$AA,$AA,$68,$68,$68
000EEA  2  AA 68 68 68  
000EEE  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
000EF2  2  88 88 88 88  
000EF6  2  88 68 88 68  .byte $88,$68,$88,$68,$88,$68,$88,$68
000EFA  2  88 68 88 68  
000EFE  2  88 BB BB B8  .byte $88,$BB,$BB,$B8,$88,$88,$88,$88
000F02  2  88 88 88 88  
000F06  2  88 88 68 88  .byte $88,$88,$68,$88,$88,$88,$68,$88
000F0A  2  88 88 68 88  
000F0E  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
000F12  2  88 88 88 88  
000F16  2  BB 88 88 88  .byte $BB,$88,$88,$88,$88,$88,$8B,$BB
000F1A  2  88 88 8B BB  
000F1E  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
000F22  2  88 88 88 88  
000F26  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
000F2A  2  88 88 88 88  
000F2E  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
000F32  2  88 88 88 88  
000F36  2  BB BB BB 98  .byte $BB,$BB,$BB,$98,$88,$88,$88,$9B
000F3A  2  88 88 88 9B  
000F3E  2  BB BB B9 88  .byte $BB,$BB,$B9,$88,$88,$88,$88,$89
000F42  2  88 88 88 89  
000F46  2  88 88 88 9B  .byte $88,$88,$88,$9B,$BB,$BB,$B8,$88
000F4A  2  BB BB B8 88  
000F4E  2  88 88 88 89  .byte $88,$88,$88,$89,$BB,$BB,$88,$88
000F52  2  BB BB 88 88  
000F56  2  88 88 88 89  .byte $88,$88,$88,$89,$88,$88,$88,$88
000F5A  2  88 88 88 88  
000F5E  2  88 88 88 98  .byte $88,$88,$88,$98,$88,$88,$88,$88
000F62  2  88 88 88 88  
000F66  2  88 88 89 89  .byte $88,$88,$89,$89,$88,$88,$88,$88
000F6A  2  88 88 88 88  
000F6E  2  BB BB BB 98  .byte $BB,$BB,$BB,$98,$88,$88,$88,$89
000F72  2  88 88 88 89  
000F76  2  98 88 89 BB  .byte $98,$88,$89,$BB,$98,$88,$89,$BB
000F7A  2  98 88 89 BB  
000F7E  2  98 88 89 BB  .byte $98,$88,$89,$BB,$98,$88,$89,$BB
000F82  2  98 88 89 BB  
000F86  2  BB BB BB 98  .byte $BB,$BB,$BB,$98,$88,$88,$88,$89
000F8A  2  88 88 88 89  
000F8E  2  88 89 9B B9  .byte $88,$89,$9B,$B9,$98,$88,$88,$88
000F92  2  98 88 88 88  
000F96  2  88 88 89 BB  .byte $88,$88,$89,$BB,$BB,$BB,$88,$88
000F9A  2  BB BB 88 88  
000F9E  2  88 89 BB 99  .byte $88,$89,$BB,$99,$88,$89,$BB,$98
000FA2  2  88 89 BB 98  
000FA6  2  88 89 BB 99  .byte $88,$89,$BB,$99,$88,$89,$BB,$98
000FAA  2  88 89 BB 98  
000FAE  2  88 88 89 BB  .byte $88,$88,$89,$BB,$BB,$BB,$98,$88
000FB2  2  BB BB 98 88  
000FB6  2  88 88 88 B9  .byte $88,$88,$88,$B9,$88,$88,$88,$88
000FBA  2  88 88 88 88  
000FBE  2  88 8A BB A8  .byte $88,$8A,$BB,$A8,$88,$88,$88,$88
000FC2  2  88 88 88 88  
000FC6  2  CC EC CC CA  .byte $CC,$EC,$CC,$CA,$88,$88,$88,$88
000FCA  2  88 88 88 88  
000FCE  2  88 88 8A AC  .byte $88,$88,$8A,$AC,$CA,$A8,$88,$CC
000FD2  2  CA A8 88 CC  
000FD6  2  88 88 88 8A  .byte $88,$88,$88,$8A,$AC,$CC,$CC,$88
000FDA  2  AC CC CC 88  
000FDE  2  88 88 88 AC  .byte $88,$88,$88,$AC,$CA,$A8,$AA,$CC
000FE2  2  CA A8 AA CC  
000FE6  2  CC CC CC CA  .byte $CC,$CC,$CC,$CA,$A8,$88,$88,$8A
000FEA  2  A8 88 88 8A  
000FEE  2  88 88 8A AA  .byte $88,$88,$8A,$AA,$AC,$CE,$CA,$88
000FF2  2  AC CE CA 88  
000FF6  2  88 88 88 8A  .byte $88,$88,$88,$8A,$CA,$88,$AC,$A8
000FFA  2  CA 88 AC A8  
000FFE  2  88 88 88 8A  .byte $88,$88,$88,$8A,$CA,$88,$AC,$A8
001002  2  CA 88 AC A8  
001006  2  88 88 88 8C  .byte $88,$88,$88,$8C,$CC,$CC,$CA,$88
00100A  2  CC CC CA 88  
00100E  2  AC CE CC CC  .byte $AC,$CE,$CC,$CC,$C8,$88,$88,$88
001012  2  C8 88 88 88  
001016  2  CA 88 88 AC  .byte $CA,$88,$88,$AC,$C8,$88,$88,$AC
00101A  2  C8 88 88 AC  
00101E  2  CA 88 88 AC  .byte $CA,$88,$88,$AC,$C8,$88,$88,$AC
001022  2  C8 88 88 AC  
001026  2  AC CC CC CA  .byte $AC,$CC,$CC,$CA,$88,$88,$88,$88
00102A  2  88 88 88 88  
00102E  2  8A CC CA 88  .byte $8A,$CC,$CA,$88,$88,$88,$88,$88
001032  2  88 88 88 88  
001036  2  AC CC A8 88  .byte $AC,$CC,$A8,$88,$88,$88,$88,$8A
00103A  2  88 88 88 8A  
00103E  2  CE EC CA 88  .byte $CE,$EC,$CA,$88,$88,$88,$8A,$CC
001042  2  88 88 8A CC  
001046  2  88 AA CC AA  .byte $88,$AA,$CC,$AA,$88,$AA,$CC,$AA
00104A  2  88 AA CC AA  
00104E  2  88 88 AC EE  .byte $88,$88,$AC,$EE,$CC,$CC,$CA,$88
001052  2  CC CC CA 88  
001056  2  88 88 AC CC  .byte $88,$88,$AC,$CC,$8A,$CC,$CA,$88
00105A  2  8A CC CA 88  
00105E  2  88 AA CC 88  .byte $88,$AA,$CC,$88,$88,$8A,$CC,$AA
001062  2  88 8A CC AA  
001066  2  CC CC C8 88  .byte $CC,$CC,$C8,$88,$88,$88,$8A,$CC
00106A  2  88 88 8A CC  
00106E  2  AC CC CA 88  .byte $AC,$CC,$CA,$88,$88,$88,$88,$88
001072  2  88 88 88 88  
001076  2  88 8C CC A8  .byte $88,$8C,$CC,$A8,$88,$88,$88,$88
00107A  2  88 88 88 88  
00107E  2  88 88 CC CA  .byte $88,$88,$CC,$CA,$88,$88,$88,$88
001082  2  88 88 88 88  
001086  2  88 88 CC CC  .byte $88,$88,$CC,$CC,$CA,$88,$88,$88
00108A  2  CA 88 88 88  
00108E  2  88 8C CC CC  .byte $88,$8C,$CC,$CC,$EE,$CC,$CA,$88
001092  2  EE CC CA 88  
001096  2  88 8C CC A8  .byte $88,$8C,$CC,$A8,$88,$88,$8C,$CA
00109A  2  88 88 8C CA  
00109E  2  A8 AC A8 88  .byte $A8,$AC,$A8,$88,$88,$88,$88,$8C
0010A2  2  88 88 88 8C  
0010A6  2  A8 AC A8 88  .byte $A8,$AC,$A8,$88,$88,$88,$88,$8C
0010AA  2  88 88 88 8C  
0010AE  2  88 8A CC A8  .byte $88,$8A,$CC,$A8,$88,$88,$8C,$C8
0010B2  2  88 88 8C C8  
0010B6  2  88 88 8A CC  .byte $88,$88,$8A,$CC,$CE,$EC,$CA,$88
0010BA  2  CE EC CA 88  
0010BE  2  88 88 88 AA  .byte $88,$88,$88,$AA,$AA,$AA,$A8,$88
0010C2  2  AA AA A8 88  
0010C6  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
0010CA  2  88 88 88 88  
0010CE  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
0010D2  2  88 88 88 88  
0010D6  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
0010DA  2  88 88 88 88  
0010DE  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
0010E2  2  88 88 88 88  
0010E6  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
0010EA  2  88 88 88 88  
0010EE  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
0010F2  2  88 88 88 88  
0010F6  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
0010FA  2  88 88 88 88  
0010FE  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
001102  2  88 88 88 88  
001106  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
00110A  2  88 88 88 88  
00110E  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
001112  2  88 88 88 88  
001116  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
00111A  2  88 88 88 88  
00111E  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
001122  2  88 88 88 88  
001126  2  88 88 88 88  .byte $88,$88,$88,$88,$88,$88,$88,$88
00112A  2  88 88 88 88  
00112E  2               
00112E  1               
